{"version":3,"sources":["components/Candy.jsx","components/Chart.js","components/Calculator.jsx","App.js","reportWebVitals.js","index.js"],"names":["Candy","initialCandies","useState","candyList","setCandyList","counter","console","log","className","length","onClick","map","el","i","candy","filter","Chart","labels","datasets","label","data","backgroundColor","chartData","width","height","options","title","display","text","fontSize","legend","position","Calculator","num1","setNum1","num2","setNum2","result","setResult","error","setError","validateForm","errors","Container","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","Alert","variant","Button","preventDefault","temp","Math","floor","parseInt","addHandler","subtractHandler","multiplyHandler","round","divideHandler","resetHandler","App","Tabs","defaultActiveKey","id","Tab","eventKey","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44620a9f.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction Candy () {\r\n\r\n    let initialCandies = [\"snicker\", \"skittles\", \"twix\", \"milky way\"];\r\n    const [candyList, setCandyList] = useState(initialCandies);\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const handleCandy = (candy) => {\r\n       setCandyList(candyList.filter(el => el !== candy)) \r\n    }  \r\n\r\n    console.log(\"counter\", counter, typeof counter);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"candy-content\">\r\n                {/* <div>\r\n                    Count is : {counter}\r\n                    <button onClick={() => setCounter(0)}>Reset</button>\r\n                    {console.log(\"count reset\", counter)}\r\n                    <button onClick={() => setCounter(count => count + 1)}>+ (Increment)</button>\r\n                    {console.log(\"count increment\", counter)}\r\n                    <button onClick={() => setCounter(count => count - 1)}>- (Decrement)</button>\r\n                    {console.log(\"count decreement\", counter)}\r\n                </div> */}\r\n                <p className=\"heading\">Candy Dispenser</p>\r\n                <p className=\"title\">Available Candy</p>\r\n                <div>\r\n                    <ul>\r\n                        {\r\n                            candyList.length === 0 ? (\r\n                                <li>\r\n                                    <button className=\"candy-btn\" onClick={() => setCandyList(initialCandies)}>Refill</button>\r\n                                </li>\r\n                            )  :\r\n                            candyList.map((el, i) => {\r\n                                return (\r\n                                    <div key={i}>\r\n                                        <li>\r\n                                            <button className=\"candy-btn\" onClick={() => handleCandy(el)}>grab</button>{el}\r\n                                        </li>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Candy;","import React,{ useState} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nfunction Chart() {\r\n    const [chartData, setChartData] = useState({\r\n        labels: ['Jan', 'Feb', 'Mar', 'April', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n        datasets:[\r\n          {\r\n            label:'Income',\r\n            data:[\r\n              617594,\r\n              181045,\r\n              153060,\r\n              106519,\r\n              105162,\r\n              95072,\r\n              617594,\r\n              181045,\r\n              153060,\r\n              106519,\r\n              105162,\r\n              95072\r\n            ],\r\n            backgroundColor:[\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n              'rgba(255, 206, 86, 0.6)',\r\n              'rgba(75, 192, 192, 0.6)',\r\n              'rgba(153, 102, 255, 0.6)',\r\n              'rgba(255, 159, 64, 0.6)',\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(255, 206, 86, 0.6)',\r\n              'rgba(75, 192, 192, 0.6)',\r\n              'rgba(153, 102, 255, 0.6)',\r\n              'rgba(255, 159, 64, 0.6)',\r\n              'rgba(255, 99, 132, 0.6)'\r\n            ]\r\n          }\r\n        ]\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"chart\">\r\n                <Bar\r\n                data={chartData}\r\n                width={100}\r\n                height={50}\r\n                options={{ \r\n                    title: {\r\n                        display: true,\r\n                        text: 'Income',\r\n                        fontSize: 25\r\n                        \r\n                    },\r\n                    legend: {\r\n                        display: true,\r\n                        position: 'right'\r\n                    }\r\n                \r\n                 }}\r\n                />  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Chart","import React, {useState} from 'react'\r\nimport {Form, Button, Alert, Container} from 'react-bootstrap';\r\n\r\nfunction Calculator() {\r\n\r\n    const [num1, setNum1] = useState('');\r\n    const [num2, setNum2] = useState('');\r\n    const [result, setResult] = useState('');\r\n    let [error, setError] = useState('');\r\n    \r\n    \r\n    const addHandler = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm()) {\r\n            let temp = Math.floor(parseInt(num1,10) + parseInt(num2,10));\r\n            setResult(temp);\r\n        }\r\n    }\r\n\r\n    const subtractHandler = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm()) {\r\n            let temp = Math.floor(parseInt(num1,10) - parseInt(num2,10));\r\n            setResult(temp);\r\n        }\r\n    }\r\n\r\n    const multiplyHandler = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm()) {\r\n            let temp = parseInt(num1,10)*parseInt(num2,10);\r\n            setResult(temp);\r\n        }\r\n    }\r\n    \r\n    const divideHandler = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm()) {\r\n            let temp = Math.round(parseInt(num1,10)/parseInt(num2,10));\r\n            setResult(temp);\r\n        }\r\n    }\r\n    \r\n    const validateForm = () => {\r\n        let errors = {num1: '', num2: ''};\r\n\r\n        if (num1 === '') {\r\n            errors.num1 = \"Please enter valid 1st No\"\r\n        } \r\n        \r\n        if (num2 === '') {\r\n            errors.num2 = \"Please enter valid 2nd No\"\r\n        }\r\n        setError(errors);\r\n        console.log(\"errors\", errors);\r\n        if( errors.num1 !== '' || errors.num2 !== ''){\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const resetHandler = (e) => {\r\n        e.preventDefault();\r\n        setNum1('');\r\n        setNum2('');\r\n        setResult('');\r\n        setError('');\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div><h3>Basic Calculator</h3></div>\r\n            <Form>\r\n                <Form.Group controlId=\"1st\">\r\n                    <Form.Label>1st No</Form.Label>\r\n                    <Form.Control \r\n                        type=\"number\" \r\n                        placeholder=\"Enter 1st No\" \r\n                        value={num1}\r\n                        onChange={(e) => setNum1(e.target.value)}\r\n                    />\r\n                    {error.num1 && <Alert variant='danger'>{error.num1}</Alert>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"2nd\">\r\n                    <Form.Label>2nd No</Form.Label>\r\n                    <Form.Control \r\n                        type=\"number\" \r\n                        placeholder=\"Enter 2nd No\"\r\n                        value={num2} \r\n                        onChange={(e) => setNum2(e.target.value)}\r\n                    />\r\n                    {error.num2 && <Alert variant='danger'>{error.num2}</Alert>}\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" className=\"mr-2\" type=\"submit\" onClick={(e) => addHandler(e)}>\r\n                    Addition\r\n                </Button>\r\n                <Button variant=\"primary\" className=\"mr-2\" type=\"submit\" onClick={(e) => subtractHandler(e)}>\r\n                    Subtraction\r\n                </Button>\r\n                <Button variant=\"primary\" className=\"mr-2\" type=\"submit\" onClick={(e) => multiplyHandler(e)}>\r\n                    Multiply\r\n                </Button>\r\n                <Button variant=\"primary\" className=\"mr-2\" type=\"submit\" onClick={(e) => divideHandler(e)}>\r\n                    Divide\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={(e) => resetHandler(e)}>\r\n                    Reset\r\n                </Button>\r\n                <div>\r\n                <Form.Label className=\"\"> The result is : {result}</Form.Label>\r\n                </div>\r\n                \r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Calculator\r\n","import React from 'react';\nimport Candy from './components/Candy';\nimport Chart from './components/Chart';\nimport Calculator from './components/Calculator';\nimport {Tab, Tabs} from 'react-bootstrap';\n\nfunction App () {\n\n  return (\n    <div className=\"container mt-4\">\n      <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"home\" title=\"Candy Dispenser\">\n          <Candy/>\n        </Tab>\n        <Tab eventKey=\"profile\" title=\"Chart\">\n          <Chart/>  \n        </Tab>\n        <Tab eventKey=\"contact\" title=\"Calculator\">\n          <Calculator/>\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}